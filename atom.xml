<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Raspberry Pi Brasil</title>
    <link href="https://www.raspberrypibrasil.com/atom.xml" rel="self" />
    <link href="https://www.raspberrypibrasil.com/" />
    <updated>2021-03-22T04:53:24.607745Z</updated>
    <author>
        <name>Equipe Raspberry Pi Brasil - @raspibrasil@qoto.org</name>
    </author>
    <id>urn:uuid:3b25749c-8528-33b2-9fb6-e1f02633295f</id>
    
    <entry>
        <title>Hello World! O que é o Raspberry Pi e o Software livre?</title>
        <link href="https://www.raspberrypibrasil.com/blog/bem_vindo_ao_raspberrypi_brasil/" />
        <id>urn:uuid:1affbe74-5365-501a-b239-ff5aa5a99e6e</id>
        <updated>2021-03-12T14:25:58.220001Z</updated>
        <content type="xhtml">
            <div xmlns="http://www.w3.org/1999/xhtml">
                <h1>Hello World! O que é o Raspberry Pi e o Software livre?</h1>
<p><code>Hello world!</code></p>
<p>Somos a comunidade brasileira do Software Livre e dos <em>single board computers</em> como o Raspberry Pi. Neste blog, buscamos explorar e reportar todas as notícias sobre a computação de porte pequeno e de baixo consumo de energia, e sobre como o <a href="https://www.gnu.org/philosophy/free-sw.en.html">Software Livre</a> como o GNU/Linux pode expandí-lo para obter qualquer solução que você precisar.</p>
<p>Embora alguns estejam familiarizados com estes termos, iniciantes podem se confundir com alguns dos termos que utilizamos aqui. Este post inicial servirá como clarificação e explicação inicial sobre todos os termos mais técnicos que aqui utilizamos. Venha conosco aprender mais!</p>
<h2>O que é o Raspberry Pi? Como ele difere de um computador tradicional?</h2>
<p>O Raspberry Pi é um tipo de <em>single board computer</em> (<a href="https://pt.wikipedia.org/wiki/Computador_de_placa_%C3%BAnica">computador de placa única</a>, no Português) - ou SBC - desenvolvido pela <a href="https://www.raspberrypi.org/">Raspberry Pi Foundation</a> na Inglaterra. O propósito principal do projeto desde sua concepção em 2012 foi de instruir e educar pessoas sobre a ciência da computação através de um computador financeiramente acessível e altamente configurável.</p>
<p>Como todo SBC, o Raspberry Pi é um computador completo construído numa única placa de silicone com todos os componentes - ex: CPU, Placa de Vídeo, saídas USB, placa de rede e adaptador WiFi - estão disponíveis no mesmo espaço compacto, que geralmente pode ser colocado facilmente numa <a href="https://amzn.to/2WD8h0I">caixinha protetora</a>. Acompanhado de uma fonte DC 5V -  equivalente a um carregador de smartphone Android comum - e periféricos como mouse e teclado USB e um monitor HDMI, um Raspberry Pi funciona perfeitamente como um pequeno computador desktop.</p>
<p><img alt="Utilizando um raspberry Pi como um Desktop, completo com monitor e HD externo" src="/static/images/raspberry_pi_as_desktop_pc.jpg" /></p>
<p>Porém, antes de jogar o seu PC fora e procurar o SBC mais próximo, saiba que o Raspberry Pi não é uma bala de prata e uma alternativa 100% a alguns tradicionais computador desktop (ainda). Na maioria das vezes, a limitação maior são os recursos como memória e capacidade do processador. </p>
<p>A versão mais atual do Raspberry Pi (no momento desta publicação em Dezembro de 2020) por exemplo é o <a href="https://amzn.to/34zoLuV">Raspberry Pi 4B</a>, que possui 4GB de memória RAM e um processador ARMv8 quad-core 1.5GHz. Estas são especificações impressionantes para um SBC alimentado por fonte de celular, mas que provavelmente deixam um pouco a desejar para usuários mais <em>power users</em> ou que almejam utilizar seu computador para tarefas mais arrojadas como edição de vídeo ou áudio, ou jogos. </p>
<p>Em comparação a um laptop, o Raspberry Pi também pode deixar a desejar em quesito de mobilidade, pois não possui bateria nem os acessórios periféricos como a tela ou teclado embutidos. Há projetos de hardware que buscam resolver estes dois casos, com talvez o mais famoso deles sendo o <a href="https://www.pine64.org/">PINE64</a>, que monta laptops e até smartphones utilizando a placa do Raspberry Pi como base.</p>
<p>Outra limitação é que o próprio hardware do Raspberry Pi, que utiliza um processador da <a href="https://www.arm.com/why-arm/architecture">arquitetura ARM</a>, não suporta ainda todos os sistemas operacionais existentes. Estes frequentemente focam na arquitetura x86, popularizada pela instalação do <em>Personal Computer</em> desde os anos 90, e ainda dominam o mercado. Software como jogos ou aplicativos proprietários específicos ainda não suportam esta plataforma amplamente.</p>
<p>Felizmente quase todo o software livre suporta a arquitetura ARM e roda muito bem no Raspberry Pi. Pelo menos cinco das <a href="https://distrowatch.com/dwres.php?resource=major">maiores distribuições Linux</a> oficialmente suportam a arquitetura ARM, podendo ser instaladas no Raspberry Pi. Isto nos leva ao nosso próximo ponto: por quê você <em>deve</em> utilizar software livre em conjunto com ele.</p>
<h2>O que é o Software Livre e porque ele é a melhor escolha para o Raspberry Pi?</h2>
<p>Se o hardware do nosso computador é um carro, o software certamente é o motor que lhe dá vida. A escolha do software que você instala e roda no computador é altamente responsável pela sua performance e a experiência que você tira ao utilizá-lo. </p>
<p>Quantas vezes não nos frustramos com algum software que "dá pau" de vez em quando, ou que é extremamente lento para performar? Você acha que comprar um computador novo é a solução? Acredite, nossos computadores <em>não</em> envelhecem com o tempo - é o software que instalamos neles que se torna cada vez maior e menos eficiente. Quando utilizamos software não-livre como o Windows, que são proprietários e distribuidos somente pela Microsoft, não temos como nos livrar deste destino, senão por aceitá-lo e trocar de computador com frequência.</p>
<p>Embora não podemos controlar 100% a forma que o software é criado e atualizado, o <a href="https://www.gnu.org/philosophy/free-sw.pt-br.html">Software Livre</a> oferece uma alternativa ao software que é desenvolvido atrás de portas fechadas e que ninguém consegue dizer ao certo como funciona, ou por que ele funciona de uma certa maneira. Quando o software é livre, <a href="https://www.gnu.org/philosophy/free-sw.html">temos a liberdade</a> de utilizá-lo, modificá-lo (ou solicitar a modificação) e distribuí-lo como quisermos.</p>
<p><img alt="The four software freedoms - Credit: Free Software Magazine" src="http://freesoftwaremagazine.com/articles/rule_1_hold_on_loosely/c20080905_four_freedoms.jpg" /></p>
<p>Estas liberdades, combinada com o fato que o Software Livre frequentemente é mais seguro e eficiente do que o proprietário, tornam o Software Livre a implementação perfeita para ser utilizada com o seu Raspberry Pi. É através deste software que iremos torná-lo um computador que fará tudo o que desejamos dele no nosso dia-a-dia, seja um Desktop, servidor caseiro, servidor para um site pessoal hospedado na sua própria casa, drive de rede, ou servidor VPN para bloquear anúncios.</p>
<p>Quais Sistemas operacionais livres você deve usar, então? A escolha, como sempre, é sua, mas nossa recomendação é o <a href="https://ubuntu.com/download/raspberry-pi">Ubuntu Linux</a>, por ser simples e familiar de se utilizar e configurar, mas outras distribuições e o FreeBSD também são ótimos candidatos.</p>
<p>Combinando o Raspberry Pi e o Software Livre, temos uma plataforma de computação verdadeiramente completa para resolver todos os problemas que você tiver.</p>
<h2>Quais são os próximos passos para começar com o Raspberry Pi?</h2>
<p>Se você leu até aqui e está interessado em aprender mais, assine o feed deste blog para não perder nenhum artigo que postamos aqui.</p>
<p>Seus próximos passos lógicos são escolher um modelo de Raspberry Pi (ou outro SBC) e feito isso, escolher qual Sistema Operacional irá instalar nele, e colocar a mão na massa! Falaremos mais sobre cada um destes passos nos nossos próximos posts.</p>
<p>O que você achou de começar a utilizar o Raspberry Pi? Conhece outros SBCs que também são interessantes? <a href="https://qoto.org/@raspibrasil">Siga-nos no Mastodon</a> e nos conte o que achou!</p>
<p>Abraços!</p>
<p><em>Publicado em 22 de Dezembro de 2020</em></p>
            </div>
        </content>
    </entry>

    <entry>
        <title>Como escolher o seu primeiro Raspberry Pi?</title>
        <link href="https://www.raspberrypibrasil.com/blog/como_escolher_seu_raspberry_pi/" />
        <id>urn:uuid:bf6b4a81-aadb-5d8a-81ed-dc7992d7cb47</id>
        <updated>2021-03-12T14:25:58.240132Z</updated>
        <content type="xhtml">
            <div xmlns="http://www.w3.org/1999/xhtml">
                <h1>Como escolher o seu primeiro Raspberry Pi?</h1>
<p>Olá mundo, e feliz ano novo atrasado! Desde que publicamos <a href="/blog/bem_vindo_ao_raspberrypi_brasil/">nosso primeiro artigo explicando o que são o Raspberry Pi, SBCs e o Software Livre</a>, a grande pergunta que ficou foi: diante de tantos modelos de SBCs (e do próprio Raspberry Pi)  existentes, como escolher aquele que é o melhor para nós?</p>
<p>Pensando nesta dúvida frequente entre os iniciantes no Single Board Computing, elaboramos este artigo para tirar suas dúvidas e informá-lo da melhor maneira possível para dar o seu primeiro passo neste mundo incrível de aprendizado e realização.</p>
<p>Venha conosco!</p>
<h2>Objetivos e Recursos</h2>
<p>A sua decisão em qual SBC é o melhor para você provém principalmente de duas grandes variáveis: o seu <strong>objetivo</strong> em usar o dispositivo, e quanto de <strong>recursos</strong> você necessitará.</p>
<p>O seu objetivo pretendido ao utilizar o seu Raspberry Pi ou SBC poderá afetar significantemente a sua escolha final. Por exemplo: você pretende utilizá-lo mais como um computador Desktop, conectando um monitor, teclado e mouse nele? Ou pretende utilizá-lo mais como um servidor em rede, instalando-o em algum lugar remoto na casa e administrando-o através da rede? Ou está pensando em sair um pouco do mundo do software e quer montar máquinas e mexer com hardware?</p>
<p>Embora seja possível alcançar cada um dos objetivos acima com qualquer SBC, alguns são mais apropriados para cada uma destas tarefas.</p>
<h3>Desktop</h3>
<p>Versões recentes do Raspberry Pi, especialmente a partir do <a href="https://amzn.to/3slgdlW">modelo 4</a>, são análogas a um computador desktop e em muitos casos possuem especificações iguais ou melhores que alguns deles. Nossa recomendação é que pelo menos 4 GB de memória RAM sejam dedicados para o uso de um SBC como uma alternativa a um computador Desktop, e com bastante conectividade USB ou sem fio para conectar periféricos.</p>
<p>Com 4 a 8 GB de memória, o <a href="https://amzn.to/3slgdlW">Raspberry Pi 4</a> funciona bem como uma reposição de um computador Desktop, consumindo significante menos energia e apresentando uma interface gráfica familiar e eficiente quando combinado com o poder do <a href="/blog/bem_vindo_ao_raspberrypi_brasil.html">Software Livre</a>. A presença de WiFi e Bluetooth integrada no chip torna-o ainda mais poderoso, possibilitando você a conectar seus periféricos sem fio facilmente, e conectar a uma rede caseira sem fio com facilidade.</p>
<p>Um outro projeto de SBC projetado pela Asus, o <a href="https://www.asus.com/us/Single-Board-Computer/Tinker-Board/">Asus Tinkerboard</a> possui especificações parecidas com Desktops tradicionais, podendo até mesmo exibir vídeo em resolução 4K. É uma alternativa interessante ao Raspberry Pi como um Desktop.</p>
<h3>Servidor</h3>
<p>O Raspberry Pi também funciona bem como um servidor em rede por conta do seu baixo consumo de energia, tamanho compacto e suas especificações bem-posicionadas para pequenos servidores. Por conta do consumo relativamente menor de recursos em comparação aos computadores desktops atuais, até modelos mais antigos do Raspberry Pi, como o <a href="https://amzn.to/3qlUOqH">Raspberry Pi 3</a> com 1GB de memória, podem ser suficientes nestes casos.</p>
<p>Graças à eficiência e dos sistemas operacionais livres disponíveis para servidores, é possível colocar um SBC com recursos relativamente modestos performando bem como um servidor pessoal. Como resultado, o consumo de energia e a geração de calor também são bastante reduzidos, podendo algumas vezes não precisar de refrigeração para serem mantidos.</p>
<p>Outras alternativas para esta forma de utilização incluem outros fabricantes de SBCs como o <a href="https://en.wikipedia.org/wiki/Banana_Pi">Banana Pi</a>, ou o <a href="https://amzn.to/35GN62I">BeagleBone</a>.</p>
<h3>Integração de Hardware e IoT</h3>
<p>Quando se trata de projetos com foco em Hardware - por exemplo: sensores, controle remoto, Internet of Things (IOT) - ainda é possível utilizar o Raspberry Pi para diversos projetos, dado suas interfaces diversas de comunicação, e a possibilidade de extendê-lo através da <a href="https://en.wikipedia.org/wiki/PCI_Express">interface PCI Express</a> com periféricos extras de forma compacta. Porém, neste campo o campeão indiscutível é o projeto <a href="https://www.arduino.cc/">Arduino</a>.</p>
<p>Não há apenas um único "modelo" de Arduino: você adquire as placas contendo o CPU e as arruma conforme as suas necessidades de hardware. É possível integrá-lo com <a href="https://amzn.to/3bEImOT">sensores de ambiente</a>, <a href="https://amzn.to/3oMeofz">motores</a>, e <a href="https://amzn.to/3bGXjje">inúmeros outros periféricos</a> para adaptá-lo perfeitamente às suas necessidades.</p>
<p>O Arduino também integra o lado do software em seus produtos, com todos os componentes sendo programáveis através de linguagens de programação como o C ou <a href="https://amzn.to/3qnhcju">Python</a>. É uma forma prática de trazer um projeto de software para a vida real.</p>
<h2>Apetrechos e periféricos</h2>
<p>Embora utilizável por si próprio, a performance e experiência do Raspberry Pi podem ser melhoradas com a adição de alguns periféricos que extendem sua utilização e oferecem proteção ao equipamento. </p>
<p>Como recomendação mínima, recomendamos a utilização pelo menos de um <a href="https://amzn.to/3qjZ7Ty">case de proteção</a> para a frágil placa do Raspberry Pi e, no caso do Raspberry Pi 4, a <a href="https://amzn.to/3nEGcRG">fonte oficial do Raspberry Pi Foundation</a>, já que modelos a partir desta versão possuem uma amperagem um pouco maior do que as fontes de celular comuns. E se utilizado como um computador desktop, recomendamos também a compra de um <a href="https://amzn.to/35JxY4x"><em>heatsink</em></a> por conta do calor gerado por seu processador mais poderoso.</p>
<p>Para saber mais sobre os diversos acessórios para complementar e melhorar a experiência do Raspberry Pi, preparamos para você um post exclusivo sobre o assunto: <a href="/blog/melhores_acessorios_raspberry_pi.html">Quais os melhores acessórios e periféricos para o Raspberry Pi?</a></p>
<h2>Guia rápido de escolha</h2>
<p>Sumarizando o post e para facilitar a sua escolha, segue abaixo um guia rápido descrevendo as escolhas recomendadas para o seu primeiro SBC dependendo do seu caso de uso:</p>
<ul>
<li><strong>Desktop</strong>: <a href="https://amzn.to/3slgdlW">Raspberry Pi 4</a>, de 4 a 8GB de RAM, ou Asus Tinkerboard.</li>
<li><strong>Apenas como servidor</strong>: <a href="https://amzn.to/3qlUOqH">Rasberry Pi 3B</a>, <a href="https://amzn.to/35GN62I">BeagleBone</a>.</li>
<li><strong>Projetos de IOT ou customização de hardware</strong>: <a href="https://amzn.to/3bGXjje">Arduino</a>.</li>
</ul>
<p>Estas três categorias provavelmente cobrirão a maior parte dos casos de uso, mas dada a abundância de alternativas é possível ter combinações bem variadas de hardware na sua jornada.</p>
<p>E para você, qual é o melhor SBC para cada tipo de uso e por quê? Escreva sua resposta para a nossa <a href="https://qoto.org/@raspibrasil">conta no Mastodon</a>!</p>
<p>Abraços e até o nosso próximo post!</p>
<p>Equipe Raspberry Pi Brasil</p>
            </div>
        </content>
    </entry>

    <entry>
        <title>Como instalar Linux no Raspberry Pi?</title>
        <link href="https://www.raspberrypibrasil.com/blog/como_instalar_linux_raspberry_pi/" />
        <id>urn:uuid:4ec43c75-3893-56be-90ed-a304c2f0bdc6</id>
        <updated>2021-03-16T22:07:14.775897Z</updated>
        <content type="xhtml">
            <div xmlns="http://www.w3.org/1999/xhtml">
                <h1>Como instalar Linux no Raspberry Pi?</h1>
<p>Quando se trata de trabalho com <em>Single Board Computers</em>, <a href="/blog/como_escolher_seu_raspberry_pi/">escolher o hardware</a> é apenas metade da questão. Além da variedade de modelos que se encontram à disposição, escolher o <a href="https://pt.wikipedia.org/wiki/Sistema_operativo">sistema operacional</a> (OS em Inglês), que proverá todo o suporte para o seu trabalho no seu SBC, é essencial.</p>
<p>A diversidade de sistemas operacionais disponíveis para SBCs como o Raspberry Pi é enorme, maior ainda que a de hardware, e a escolha de qual sistema utilizar pode ser um pouco confusa, especialmente se você nunca trabalhou com outro OS fora do Windows. Adicionalmente, a instalação de um OS no Raspberry Pi não segue um procedimento padrão de instalação onde se clica em menus e botões para avançar para os próximos passos e finalizar o processo. Felizmente, esta tarefa não precisa ser difícil; de fato, mostraremos passo a passo o processo.</p>
<p>Para os propósitos deste post, detalharemos o processo de instalação do sistema operacional <a href="https://en.wikipedia.org/wiki/Raspberry_Pi_OS">Raspberry Pi OS</a> (previamente conhecido como Raspbian), uma distribuição Linux baseada no <a href="https://www.debian.org">Debian</a> e desenvolvida oficialmente pela <a href="https://www.raspberrypi.org/software/operating-systems/">Raspberry Pi Foundation</a>. Embora Raspberry Pi OS seja um dos sistemas mais populares utilizados no Raspberry Pi, ele certamente não é o único, e diversas outras distribuições de Linux podem ser instaladas com este processo, que como você verá, não é complicado.</p>
<p>Vamos em frente.</p>
<h2>Por que Linux?</h2>
<figure>
    <img src="/static/images/tux.png" alt="Tux, o mascote do Linux"/>
    <figcaption>Tux, o pinguim mascote do Linux</figcaption>
</figure>

<p>Este artigo, tal como o site em geral, foca no Linux porque acreditamos que este é o sistema mais eficiente para um computador pessoal ou servidor com recursos limitados. As razões por trás desta decisão são várias.</p>
<p>Primeiramente, sistemas Linux (chamados de <em>Distribuições Linux</em>) são <a href="/blog/bem_vindo_ao_raspberrypi_brasil/">Software Livre</a>, podendo desta forma ser instalados, copiados e modificados conforme necessário. Este ponto é essencial para o aprendizado, experimentação e pesquisas, onde pode ser necessário reinstalar do zero um sistema depois de um erro de configuração, ou instalar em diversas máquinas para a utilização em rede ou para simular outras interações entre sistemas - e claro, completamente <strong>sem custo algum</strong>.</p>
<p>A liberdade de modificação também significa que os sistemas Linux podem ter componentes não-essenciais removidos ou refatorados, tornando-os muito <strong>mais leves e rápidos</strong> ao serem utilizados. Em computadores com recursos limitados como o <a href="https://amzn.to/3qlUOqH">Raspberry Pi 3</a>, ou anteriores, esta diferença é crucial para uma experiência suave e prazerosa, ao contrário de um sistema pesado e lento.</p>
<p>Além da leveza e a flexibilidade do sistema, o Linux também é geralmente considerado um sistema <strong>mais seguro</strong> do que o onipresente Windows. Este é um ponto importantíssimo quando se trata de trabalhar com o Raspberry Pi como um servidor (onde múltiplos clientes e usuários podem acessar recursos dele) por longos períodos de tempo. Embora a segurança é crucial em todos os sistemas de computadores, quando um único desktop é comprometido, um único usuário é afetado. Quando um servidor é comprometido, todos os seus usuários estão em potencial perigo. Utilizar um sistema que é seguro por padrão e constantemente atualizado como o Linux é crucial.</p>
<p>Finalmente, há a inúmera possibilidade de <strong>escolhas</strong> quando tratamos do Linux. Não só temos a flexibilidade para modificar e construir nosso sistema como quisermos, mas também podemos escolher entre vários sistemas já disponíveis para nos servir da melhor maneira. Há imagens genéricas, prontas para uso do Raspberry Pi como um desktop, como o próprio Raspberry Pi OS, outras prontas para servidores como o Ubuntu Server Edition, outras são mais minimalistas como o <a href="https://archlinuxarm.org">Arch Linux</a>, que permite você a construir seu sistema do zero.</p>
<p>Seguindo em frente, vejamos como instalar um sistema operacional no Raspberry Pi.</p>
<h2>Como o processo de instalação funciona no Raspberry Pi</h2>
<p>Diferente da instalação num computador tradicional, onde primeiro insere-se a mídia de instalação do sistema operacional e os dados são depois copiados para o disco rígido, no Raspberry Pi o processo é um pouco mais integrado, embora similar em conceito.</p>
<figure>
  <a href="https://amzn.to/3l3UOuh"><img src="/static/images/sd_card.jpg" alt="Exemplo de MicroSD Card" /></a>
  <figcaption>Ao contrário dos computadores tradicionais, no Raspberry Pi você precisa extrair a imagem de instalação diretamente na sua mídia de armazenação</figcaption>
</figure>

<p>Para instalar qualquer sistema operacional no Raspberry Pi, você precisa <em>extrair uma imagem</em> (arquivo <code>.img</code>) já pré-configurada deste sistema num <a href="https://amzn.to/3rA6QxW">cartão MicroSD</a> que será utilizado nele. Se você nunca utilizou Linux antes (onde este é o processo padrão para criação de <em>Live Media</em>), este conceito pode parecer um pouco estranho, mas felizmente existem ferramentas didáticas que tornam o processo simples e rápido.</p>
<p>Se você usa Windows ou não está acostumado a lidar com a linha de comandos do terminal do Linux, o aplicativo <a href="https://github.com/raspberrypi/rpi-imager">Raspberry Pi Imager</a> desenvolvido pela Raspberry Pi Foundation é a maneira recomendada para fazer a instalação. Você pode baixá-lo para Windows, Mac e algumas das principais distribuições Linux como o Ubuntu e Debian. Felizmente, mesmo se a sua distribuição Linux não for suportada, ainda é possível instalar a imagem utilizando o comando <code>dd</code> do Linux, que veremos mais à frente.</p>
<p>Com um cartão MicroSD em mãos, vejamos na próxima seção como instalar o Raspberry Pi OS no Raspberry Pi.</p>
<h2>Instalando o Raspberry Pi OS no através do Raspberry Pi Imager</h2>
<p>Primeiramente, baixe o Raspberry Pi Imager do repositório do <a href="https://www.raspberrypi.org/downloads/">Raspberry Pi Foundation</a> para a sua plataforma. Uma vez instalada, abra o programa e verá a seguinte mensagem:</p>
<figure>
    <img src="/static/images/rpi_imager_menu.jpg" alt="Menu principal do Raspberry Pi Imager" />
    <figcaption>Menu principal do Raspberry Pi Imager</figcaption>
</figure>

<p>O Raspberry Pi Imager pode tanto baixar uma imagem de uma lista pré-inclusa nas suas opções (Raspberry Pi OS e Ubuntu Server Edition) e extraí-la para o seu cartão MicroSD ou utilizar uma imagem que você já baixou para o seu computador para extraí-la ao cartão MicroSD. Como neste caso estamos lidando com o Raspberry Pi OS, utilizaremos a própria função do Imager para baixar e instalar a imagem:</p>
<figure>
    <img src="/static/images/rpi_imager_choosing_os.jpg" alt="Escolhendo uma imagem para baixar e instalar" />
    <figcaption>Escolhendo baixar a imagem do Raspberry Pi OS através do próprio Imager</figcaption>
</figure>

<p>É possível também escolher uma imagem que você já baixou de outro lugar também através do aplicativo. Por exemplo, para instalar <a href="http://www.puppylinux.org/">Puppy Linux</a>, basta você primeiro baixar seu arquivo de imagem (terminando com a extensão <code>.img</code>) e escolhê-lo na interface do Raspberry Pi Imager:</p>
<figure>
    <img src="/static/images/rpi_imager_custom_image.jpg" alt="Opção para escolher uma imagem customizada" />
    <figcaption>Opção do Imager para escolher uma imagem já existente no seu computador</figcaption>
</figure>

<figure>
    <img src="/static/images/rpi_imager_custom_image2.jpg" alt="Diálogo de escolha de arquivos .img" />
    <figcaption>Escolhendo uma imagem no seu computador</figcaption>
</figure>

<p>Escolha em seguida o slot do seu cartão MicroSD (geralmente <code>/dev/sdb</code> ou <code>/dev/mmcblk0</code> no Linux) para o qual a imagem será extraída.</p>
<figure>
    <img src="/static/images/rpi_imager_choosing_sdcard.jpg" alt="Escolhendo o dispositivo do SD Card" />
    <figcaption>Escolhendo o dispositivo do Cartão MicroSD</figcaption>
</figure>

<blockquote>
<p>Atenção: ao realizar este procedimento, todos os dados do cartão MicroSD serão permanentemente apagados. Faça o backup destes dados antes de prosseguir.</p>
</blockquote>
<p>Clique OK. O Raspberry Pi Imager baixará a imagem (dependendo do tamanho, pode demorar bastante), e em seguida automaticamente extraí-la para o seu cartão MicroSD.</p>
<p>Ao fim do processo, você poderá remover o seu cartão SD e inserí-lo no seu Raspberry Pi para começar a usar Linux nele. A instalação está concluída.</p>
<h3>Instalando através da linha de comando</h3>
<p>Se você usa uma distribuição Linux não oficialmente suportada pelo Raspberry Pi Imager, não se preocupe: é perfeitamente possível extrair a imagem através da linha de comando (terminal). Para isso, o comando <code>dd</code> é utilizado.</p>
<p>Se o seu dispositivo do cartão SD é <code>/dev/mmcblk0</code>, e a sua imagem é <code>distro.img</code> o comando:</p>
<pre><code>sudo dd if=distro.img of=/dev/mmcblk0 bs=4M status=progress
</code></pre>
<p>Irá realizar a extração e preparo do seu cartão SD. Quando este terminar (pode demorar até 5 minutos dependendo do tamanho da imagem) você poderá utilizar o cartão SD no seu Raspberry Pi.</p>
<p>O comando <code>dd</code> é poderoso, mas a sua utilização errada pode causar a destruição dos dados armazenados no dispositivo. Por isso, deve ser utilizado com cuidado. Falaremos mais sobre este comando no futuro.</p>
<h2>Conclusão</h2>
<p>Instalar Linux no Raspberry Pi é um pouco diferente de um computador comum, mas nem por isso é difícil. Utilizando-se do programa Raspberry Pi Imager, o processo é intuitivo, e usuários avançados podem utilizar a linha de comando para rapidamente realizá-lo. Uma vez realizada a instalação, você está pronto para começar a usar o Linux no Raspberry Pi. É um novo mundo, e falaremos mais sobre isso no futuro.</p>
<p>Você já instalou Linux no Raspberry Pi? Qual distribuição e qual método utilizou? Mande uma mensagem para nossa conta no <a href="https://qoto.org/@raspibrasil">Mastodon!</a></p>
<p>Abraços!</p>
<p><strong>Equipe Raspberry Pi Brasil</strong></p>
            </div>
        </content>
    </entry>

    <entry>
        <title>Usando o Raspberry Pi como um NAS na sua rede caseira</title>
        <link href="https://www.raspberrypibrasil.com/blog/compartilhando_arquivos_nas_raspberrypi/" />
        <id>urn:uuid:3cdae64b-26a9-58f1-bcdd-c7db6bdf1ac7</id>
        <updated>2021-03-22T13:32:12.141878Z</updated>
        <content type="xhtml">
            <div xmlns="http://www.w3.org/1999/xhtml">
                <h1>Usando o Raspberry Pi como um NAS na sua rede caseira</h1>
<p>Depois de <a href="/blog/como_escolher_seu_raspberry_pi/">escolher o modelo apropriado</a> do seu Raspberry Pi e <a href="/blog/como_instalar_linux_raspberry_pi/">instalar Linux nele</a>, podemos finalmente começar a brincar com ele e experimentá-lo com várias soluções e <em>stacks</em> de software para nos servir da melhor forma. Afinal, é através destes constantes experimentos que podemos melhorar nosso entendimento e experiência com o <a href="/blog/bem_vindo_ao_raspberrypi_brasil/">Software Livre</a>.</p>
<p>Uma das melhores formas de estudar o software livre é através da aplicação prática: procure um projeto que poderá ajudar você a realizar alguma tarefa, e aprenda com sua implementação. Neste artigo, mostraremos como é fácil tornar o seu Raspberry Pi num dispositivo de <strong>armazenamento em rede</strong> na sua casa através de um software chamado <a href="https://www.samba.org">Samba</a>, que permitirá você a compartilhar arquivos entre todos os dispositivos da sua casa, independente se rodarem Linux, Windows, Mac, Android, ou iOS.</p>
<p>Vamos em frente!</p>
<h2>Como o armazemanento em rede (NAS) funciona</h2>
<p>Para este projeto, tornaremos o Raspberry Pi num dispositivo de <a href="https://en.wikipedia.org/wiki/Network-attached_storage"><em>Network Attached Storage</em></a> ou, abreviadamente, <em>NAS</em>. </p>
<p>O NAS funciona como um servidor central de arquivos dentro da rede, com o qual outros computadores e dispositivos podem interagir para armazenar ou recebê-los. Se você já trabalhou num escritório onde haviam drives de redes disponíveis (F:\, G:\, etc.), o NAS via Samba funciona de forma quase idêntica.</p>
<figure>
    <img src="https://cdn.ttgtmedia.com/rms/onlineImages/network_attached_storage_mobile.jpg" alt="arquitetura do NAS numa rede local" />
    <figcaption>O NAS atua como um ponto central através do qual outros dispositivos clientes podem enviar ou receber arquivos</figcaption>
</figure>

<p>Da mesma forma que um servidor web utiliza o protocolo HTTP para enviar sites para navegadores da web, um servidor de arquivos "conversa" com computadores em rede através de um protocolo chamado SMB. O Samba é o servidor mais popular deste protocolo disponível para o Linux, e será o software que utilizaremos neste projeto.</p>
<h2>Requerimentos para este projeto</h2>
<p>Para este projeto, graças à leveza do Samba junto ao sistema Linux, versões modestas do Raspberry Pi podem ser utilizadas para realizar a tarefa. Edições <a href="/blog/como_escolher_seu_raspberry_pi/">orientadas à servidores</a> como o <a href="https://amzn.to/3sb9NoL">Raspberry Pi 3B</a> podem muito bem manuseá-lo, assim como o poderoso <a href="https://amzn.to/2QuK0Kn">Raspberry Pi 4</a> e até mesmo o primeiro modelo do <a href="https://amzn.to/3vLW75S">Raspberry Pi B</a> de 2012 possui recursos suficientes para agir como um NAS caseiro.</p>
<figure>
    <img src="https://images-na.ssl-images-amazon.com/images/I/71srygtslbL._AC_SL1131_.jpg" />
    <figcaption>O <a href="https://amzn.to/3vLW75S">Raspberry Pi Model B</a> original de 2012 pode servir como um NAS numa rede caseira de poucos dispositivos</figcaption>
</figure>

<p>Para a parte de software, utilizaremos o <em>Raspberry Pi OS</em> como sistema operacional por conta da facilidade de se instalar e configurar software nele. Se você gostaria de mais informações sobre como instalar o Raspberry Pi OS, escrevemos anteriormente um <a href="/blog/como_instalar_linux_raspberry_pi/">artigo descrevendo o processo passo-a-passo</a>.</p>
<p>Uma <em>conexão de internet</em> no Raspberry Pi é necessária para instalar e configurar seu NAS, podendo tanto ser cabeada ou WiFi. Uma conexão cabeada é recomendada por conta da maior velocidade e estabilidade em relação ao WiFi, mas ambas funcionam.</p>
<p>Finalmente, é necessário ter espaço suficiente para armazenar os arquivos a serem compartilhados. Você pode utilizar armazenamento externo como um <a href="https://amzn.to/3fabSgW">Pendrive de alta velocidade</a> ou um <a href="https://amzn.to/3f3UR87">HD externo</a>, ou armazenar diretamente no cartão MicroSD do seu Raspberry Pi.</p>
<h2>Instalando e configurando o Samba no Raspberry Pi</h2>
<p>Primeiramente, instale o pacote <code>samba</code> no Raspberry Pi OS utilizando o seguinte comando no terminal:</p>
<pre><code>sudo apt-get install samba
</code></pre>
<p>Este comando também funciona no Ubuntu Server Edition para Raspberry Pi OS. <code>apt</code> listará as dependências necessárias para insalar o Samba. Pressione 'y' e Enter para prosseguir. </p>
<p>Após a instalação, o serviço do Samba (<code>smbd</code> nos sistemas Linux) é iniciado automaticamente, mas ainda é necessário configurá-lo para fazê-lo funcionar da maneira exata que queremos. Em nosso caso, configuraremos o Samba para compartilhar apenas um diretório específico do nosso sistema, conhecido como <em>mountpoint</em> em inglês, e nos certificar que apenas usuários designados possam acessá-los.</p>
<p>Para isso, antes de começar a configuração, criaremos um usuário específico para acessar e manipular os arquivos via Samba. Você também poderia usar o seu usuário padrão para isso, mas por segurança é desejável ter um usuário específico para operar serviços. Desta forma, se por algum motivo o Samba seja comprometido, você poderá simplesmente deletar o usuário do Samba e recriá-lo - o seu usuário pessoal não será impactado.</p>
<p>Para criar o usuário <code>sambauser</code>, que será designado para o Samba, utilize o seguinte comando:</p>
<pre><code>sudo useradd -r -m -U -d /home/sambauser -s /bin/bash sambauser
</code></pre>
<p>Através deste comando, o usuário sambauser não terá uma senha associada a ele, outra medida de segurança que impede logins locais no sistema de serem realiados. Isso não é um problema, porém, porque todo o trabalho do sambauser será realizado remotamente através do serviço do Samba. Para isso, precisamos configurá-lo sob estas considerações.</p>
<p>Com o usuário criado, crie um diretório que servirá de <em>mountpoint</em> para o seu NAS. Você poderá criá-lo em qualquer lugar do seu sistema, inclusive em armazenamento externo. Neste exemplo, criaremos no próprio cartão SD do seu Raspberry Pi, dentro do diretório Home do seu usuário (por padrão, <code>pi</code> no Raspberry Pi OS) e concederemos as permissões corretas para que o usuário sambauser possa acessá-lo:</p>
<pre><code>mkdir /home/pi/NAS
chmod 777 /home/pi/NAS
</code></pre>
<p>Com isso, podemos Como tudo no Linux, a configuração do Samba é feita através de um arquivo de texto simples, localizado em <code>/etc/samba/smb.conf</code>. Para editá-lo, abra-o com o seu editor de texto favorito prefixado com <code>sudo</code>, por conta de ser um arquivo do sistema. Por exemplo:</p>
<pre><code>sudo nano /etc/samba/smb.conf
</code></pre>
<p>A configuração padrão do Samba já é bem completa em termos de funcionalidade e segurança. Precisamos apenas adicionar o <em>mountpoint</em> desejado e quais usuários poderão ter acesso a ele. Adicione o seguinte segmento no fim do arquivo <code>smb.conf</code>:</p>
<pre><code>[NAS]
    comment = NAS on RaspberryPi
    path = /home/pi/NAS
    browseable = yes
    read only = no
    create mask = 0777
    directory mask = 0777
    valid users = sambauser pi
    guest ok = no
</code></pre>
<p>A linha <code>valid users = sambauser pi</code> especifica que apenas estes dois usuários terão acesso (via Samba) à este serviço (também é possível tornar o compartilhamento público, mas este não é o escopo deste artigo).</p>
<p>Finalmente, é necessário adicionar o usuário sambauser à lista de usuários autenticados pelo serviço Samba. Para este caso, será necessário adicionar uma senha para ele, válida apenas para o Samba. Guarde-a bem: <strong>é com esta senha que você irá utilizar o Samba.</strong></p>
<pre><code>sudo smbpasswd -a sambauser
</code></pre>
<p>Para finalizar, reinicie o serviço do Samba no Raspberry Pi OS com o seguinte comando:</p>
<pre><code>sudo systemctl restart smbd
</code></pre>
<p>O samba estará rodando e compartilhando o diretório que você especificou como <em>mountpoint</em>. Para testá-lo, obtenha o seu endereço IP com o comando <code>ip addr</code>. No Windows, acesse <code>\\xxx.xxx.xxx.xxx\NAS$</code> do Windows Explorer, onde <code>xxx.xxx.xxx.xxx</code> é o endereço IP do seu Raspberry Pi. No Linux, acesse <code>smb://xxx.xxx.xxx.xxx/NAS</code> no seu gerenciador de arquivos favorito.</p>
<h2>Tornando o seu NAS mais eficiente</h2>
<p>Seu NAS está pronto para trabalhar e compartilhar arquivos entre seus vários dispositivos da sua casa. Ainda há outras coisas que podem ser feitas para otimizá-lo caso você quiser, afinal o aprendizado sempre é constante no Linux, entre elas as seguintes:</p>
<ul>
<li>Para garantir a confidencialidade da conexão entre o NAS e os dispositivos clientes, é possível realizar a transferência dos arquivos com um protocolo chamado <strong>SFTP</strong>, que emprega o famoso Secure Shell (SSH) para proteger a conexão e transferência dos arquivos. Falaremos mais sobre como implementá-lo junto ao SSH num artigo futuro.</li>
<li>É possível aumentar a velocidade da transferência usando armazenamento externo como um <a href="https://amzn.to/3f3UR87">HD</a> ou até mesmo <a href="https://amzn.to/3r9y5hu">SSD externo</a>. Outra vantagem do SSD é que eles poderão durar muito mais tempo que um HD tradicional, por conta da ausência de falhas mecânicas e os ciclos reduzidos de escrita e leitura quando implementados apenas como armazenamento.</li>
</ul>
<h2>Conclusão</h2>
<p>Tornar seu Raspberry Pi num NAS caseiro para compartilhar arquivos entre seus dispositivos na sua casa não é complicado, e nem requer muitos recursos. Graças à simples implementação do Samba, é possível começar a compartilhar arquivos em questão de alguns minutos com apenas um pouco de configuração.</p>
<p>A implementação do Samba no Raspberry Pi exemplifica novamente como o aprendizado do <a href="/blog/bem_vindo_ao_raspberrypi_brasil/">Software Livre</a> se torna muito mais poderoso e apreciável quando envolve uma aplicação prática do conhecimento. Ao realizar este projeto, você estará tanto aprendendo mais sobre administração de sistemas quanto também realizando um serviço aos seus interesses. É sob esta combinação que o aprendizado flui.</p>
<hr />
<p>O que você achou de tornar o Raspberry Pi num NAS para compartilhar arquivos? Conhece alguma outra solução para realizar este tipo de compartilhamento numa rede caseira? Deixe-nos saber na nossa <a href="https://qoto.org/@raspibrasil">conta no Mastodon!</a></p>
            </div>
        </content>
    </entry>

    <entry>
        <title>Quais os melhores acessórios e periféricos para o Raspbery Pi?</title>
        <link href="https://www.raspberrypibrasil.com/blog/melhores_acessorios_raspberry_pi/" />
        <id>urn:uuid:d70e0e14-04de-574c-b6dd-6892d9b92261</id>
        <updated>2021-03-12T14:25:58.241459Z</updated>
        <content type="xhtml">
            <div xmlns="http://www.w3.org/1999/xhtml">
                <h1>Quais os melhores acessórios e periféricos para o Raspbery Pi?</h1>
<p>Anteriormente no blog, exploramos os <a href="/blog/como_escolher_seu_raspberry_pi/">vários tipos e modelos do Raspberry Pi</a>  que podem te servir melhor para cada um dos seus objetivos em explorar o mundo dos <em>Single Board Computers</em>. Seja como Desktop ou Servidor, ou para as suas próximas invenções de IoT, existe um modelo de Raspberry Pi ou outro SBC que é perfeito para o seu próximo projeto.</p>
<p>Embora por si próprio um computador completo e inteiramente funcional (afinal, esta é a essência de um SBC), a performance e experiência de utilizar um Raspberry Pi podem ser muito melhoradas com a adição de alguns periféricos que extendem a capacidade e oferecem proteção ao equipamento. Afinal, o dispositivo é um SBC, e não um <em>All-in-one computer</em>... <code>;)</code> Mais capacidade, refrigeração, e algumas vezes proteção física contra os elementos são qualidades desejáveis à qualquer computador, e felizmente você pode oferecê-las ao Raspberry Pi através de alguns acessórios-chave. Neste post, detalharemos alguns dos acessórios que consideramos recomendados, ou algumas vezes indispensáveis para o seu Raspberry Pi. Venha com a gente!</p>
<h2>Case de proteção</h2>
<p>O primeiro acessório recomendado é o <a href="https://amzn.to/3qjZ7Ty">case de proteção</a> do Raspberry Pi. A placa dele é pequena e frágil, podendo ser danificada facilmente por conta de impacto, ou humidade demais. Um case provém uma proteção simples e eficaz ao seu Raspberry Pi, evitando que ele seja danificado acidentalmente.</p>
<p>O <a href="https://amzn.to/3qjZ7Ty">case oficial do Raspberry Pi Foundation</a> torna o dispositivo claramente identificável com suas cores branca e vermelha e a logo estampada na tampa de maneira ainda bem compacta - o dispositivo continua cabendo na palma da mão:</p>
<p><img alt="Comparação do tamanho do Raspberry Pi 4 - ele cabe na palma da mão" src="/static/images/raspi4_palm_size.jpg" /></p>
<p>Existem ainda outros cases não-oficiais que também cabem no Raspberry Pi. Alguns são feitos de <a href="https://amzn.to/39w6Abn">outros materiais como alumínio</a> que além de mais resistentes possuem um efeito de refrigeração passiva, além de outros designs e materiais (como <a href="https://amzn.to/3icPvqV">acrílico</a>) e tamanhos. Todos são eficientes na hora de proteger seu Raspberry Pi.</p>
<h2>Heatsink e refrigeração</h2>
<p>Embora possua baixo consumo de energia e poder computacional, o Raspberry Pi gera uma quantidade considerável de calor durante a utilização e, por conta da ausência de um sistema de arrefecimento, não consegue dispersar o calor tão eficientemente quanto um computador ou servidor tradicional. </p>
<p>Portanto, a depender da temperatura do ambiente (quase sempre verdadeiro para o Brasil) ou da intensidade de uso, um sistema de refrigeração ou <em>heatsink</em> para seu Raspberry Pi pode se tornar necessário.</p>
<p><em>Heatsinks</em> funcionam de forma passiva, sendo simplesmente peças que conduzem rapidamente o calor a fim de carregá-lo para fora do CPU por condução. Alguns cases possuem esta função embutida, especialmente se feitos de materiais metálicos, mas é possível comprar <a href="https://amzn.to/35JxY4x"><em>heatsinks</em> extras</a> de alumínio para serem encaixadas dentro de cases existentes. Para usos de pouca intensidade como um servidor pequeno, um bom <em>heatsink</em> pode ser suficiente.</p>
<p><a href="https://amzn.to/35JxY4x"><img alt="Heatsink com o Raspberry Pi" src="/static/images/raspberry_pi_heatsink.jpg" /></a></p>
<p>Existem também sistemas ativos de refrigeração, que são um ventilador interno que refrigera o dispositivo similarmente aos de um computador tradicional. Alguns deles podem ser <a href="https://amzn.to/2Ly1h3b">montados diretamente na placa do Raspberry Pi</a> através das interfaces PCIe, não sendo necessário a utilização das portas USB, e mantendo o conjunto de forma compacta. </p>
<p><a href="https://amzn.to/2Ly1h3b"><img alt="Resfriamento ativo via PCIe" src="/static/images/raspberry_pi_active_cooling.jpg" /></a></p>
<p>Outros essencialmente são como <a href="https://amzn.to/3srtCZx">ventiladores externos com entrada USB</a>, que você pode colocar por cima dele e ligá-los utilizando uma das saídas USB disponíveis. Um pouco menos organizado, mas ainda assim eficiente.</p>
<p><a href="/static/images/external_fan_usb.jpg"><img alt="ventilador externo USB" src="/static/images/external_fan_usb.jpg" /></a></p>
<p>Particularmente, se você pretende utilizar o seu Raspberry Pi como um desktop, com várias aplicações gráficas e um navegador sendo utilizados simultaneamente, a demanda causa o dispositivo a se sobreaquecer rapidamente, podendo chegar a temperaturas até mesmo danosas ao CPU. Neste caso, o uso de refrigeração ativa é altamente recomendado.</p>
<h2>Fonte de alimentação</h2>
<p>O Raspberry Pi e a maioria dos outros SBCs são designados para funcionar com uma fonte de Smartphone comum, operando a 5V DC e utilizando saídas MicroUSB ou USB-C para alimentação. Porém, a partir do modelo Raspberry Pi 4, o Raspberry Pi Foundation aumentou os requerimentos de alimentação, tornando a maioria das fontes de Smartphone incompatíveis com este modelo.</p>
<p>Como resultado, o Raspberry Pi 4 (e possivelmente os modelos futuros) precisam da <a href="https://amzn.to/3nEGcRG">fonte oficial específica</a> com a amperagem correta para funcionar corretamente. A não utilização desta fonte poderá acarretar na danificação do dispositivo.</p>
<h2>Armazenamento</h2>
<p>O Raspberry Pi precisa pelo menos de um cartão MicroSD para conseguir rodar um sistema operacional. Ao passo que estes se tornaram muito mais populares recentemente graças à popularização dos Smartphones Android, quando se trata de um SBC, são necessárias algumas considerações extras.</p>
<p>Primeiramente, a maior parte dos cartões MicroSDs antigos possui uma velocidade de leitura muito lenta em comparação a um HD ou outra mídia de armazenamento tradicional, o que reflete na performance do Raspberry Pi se utilizados (o computador parece "travar" de vez em quando, quando na verdade está apenas esperando os dados serem copiados).</p>
<p>Portanto, ao invés de abrir a gaveta e pegar o primeiro cartão SD que achar para instalar, é recomendado utilizar um <a href="https://amzn.to/3oNsn4y">cartão MicroSD de alta velocidade</a>, como aqueles que conformam aos <a href="https://en.wikipedia.org/wiki/SD_card#Class">padrões modernos do MicroSD</a>, como UHS-I ou UHS-II.</p>
<p>A segunda consideração é quanto ao tamanho do armazenamento. Enquanto a maior parte dos sistemas operacionais livres como Linux e FreeBSD cabem tranquilamente dentro de 8GB de espaço, pode ser necessário um espaço extra para armazenamento de dados e arquivos conforme o gosto e necessidades do usuário. Nossa recomendação é de pelo menos 32GB de espaço.</p>
<p>Porém, por conta das limitações e durabilidade reduzida dos cartões MicroSD, é melhor reservar ao cartão apenas o espaço necessário para o sistema operacional, e conectar qualquer capacidade adicional externamente, via saídas USB. Dependendo do seu caso de uso, você poderá utilizar desde <a href="https://amzn.to/2KgjXnn">Pendrives comuns USB</a> de alta capacidade ou, quando baixa latência for requisito, <a href="https://amzn.to/3sqMUy6">um HD externo</a> pode ser a única solução.</p>
<h2>As opções são inúmeras</h2>
<p>E para você, qual é o melhor SBC para cada tipo de uso e por quê? Escreva sua resposta para a nossa <a href="https://qoto.org/@raspibrasil">conta no Mastodon</a>!</p>
<p>Abraços e até o nosso próximo post!</p>
<p>Equipe Raspberry Pi Brasil</p>
            </div>
        </content>
    </entry>

</feed>
